syntax = "proto3";

package ova.service;

option go_package = "github.com/ozonva/ova-service-api";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";


// gRPC API to process user services
service ServiceAPI {
  // Create new service
  rpc CreateServiceV1(CreateServiceV1Request) returns (CreateServiceV1Response) {
    option (google.api.http) = {
      post: "/v1/create"
    };
  }

  // Get service details
  rpc DescribeServiceV1(DescribeServiceV1Request) returns (DescribeServiceV1Response) {
    option (google.api.http) = {
      get: "/v1/describe/{service_id}"
    };
  }

  // List services with pagination
  rpc ListServicesV1(google.protobuf.Empty) returns (ListServicesV1Response) {
    option (google.api.http) = {
      get: "/v1/list"
    };
  }

  // Remove service
  rpc RemoveServiceV1(RemoveServiceV1Request) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/remove/{service_id}"
    };
  }
}

message CreateServiceV1Request {
  uint64 user_id = 1;
  string description = 2;
  string service_name = 3;
  string service_address = 4;
  google.protobuf.Timestamp when = 5;
}

message CreateServiceV1Response {
  string service_id = 1;
}

message DescribeServiceV1Request {
  string service_id = 1;
}

message DescribeServiceV1Response {
  string service_id = 1;
  uint64 user_id = 2;
  string description = 3;
  string service_name = 4;
  string service_address = 5;
  google.protobuf.Timestamp when = 6;
  google.protobuf.Timestamp when_utc = 7;
}

message ListServicesV1Response {
  repeated ServiceShortInfoV1Response service_short_info = 1;
}

message ServiceShortInfoV1Response {
  string service_id = 1;
  uint64 user_id = 2;
  string service_name = 3;
  google.protobuf.Timestamp when = 4;
}

message RemoveServiceV1Request {
  string service_id = 1;
}
