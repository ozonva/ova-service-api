{
  "swagger": "2.0",
  "info": {
    "title": "api/ova-service-api/service.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/create": {
      "post": {
        "summary": "Create new service",
        "operationId": "ServiceAPI_CreateServiceV1",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceCreateServiceV1Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceCreateServiceV1Request"
            }
          }
        ],
        "tags": [
          "ServiceAPI"
        ]
      }
    },
    "/v1/describe/{service_id}": {
      "get": {
        "summary": "Get service details",
        "operationId": "ServiceAPI_DescribeServiceV1",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceDescribeServiceV1Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceAPI"
        ]
      }
    },
    "/v1/list": {
      "get": {
        "summary": "List services with pagination",
        "operationId": "ServiceAPI_ListServicesV1",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serviceListServicesV1Response"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ServiceAPI"
        ]
      }
    },
    "/v1/multicreate": {
      "post": {
        "summary": "Create multiple services",
        "operationId": "ServiceAPI_MultiCreateServiceV1",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceMultiCreateServiceV1Request"
            }
          }
        ],
        "tags": [
          "ServiceAPI"
        ]
      }
    },
    "/v1/remove/{service_id}": {
      "delete": {
        "summary": "Remove service",
        "operationId": "ServiceAPI_RemoveServiceV1",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ServiceAPI"
        ]
      }
    },
    "/v1/update/{service_id}": {
      "put": {
        "summary": "Update service",
        "operationId": "ServiceAPI_UpdateServiceV1",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceUpdateServiceV1Request"
            }
          }
        ],
        "tags": [
          "ServiceAPI"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "serviceCreateServiceV1Request": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "format": "uint64"
        },
        "description": {
          "type": "string"
        },
        "service_name": {
          "type": "string"
        },
        "service_address": {
          "type": "string"
        },
        "when": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "serviceCreateServiceV1Response": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string"
        }
      }
    },
    "serviceDescribeServiceV1Response": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string",
          "format": "uint64"
        },
        "description": {
          "type": "string"
        },
        "service_name": {
          "type": "string"
        },
        "service_address": {
          "type": "string"
        },
        "when": {
          "type": "string",
          "format": "date-time"
        },
        "when_utc": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "serviceListServicesV1Response": {
      "type": "object",
      "properties": {
        "service_short_info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/serviceServiceShortInfoV1Response"
          }
        }
      }
    },
    "serviceMultiCreateServiceV1Request": {
      "type": "object",
      "properties": {
        "create_service": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/serviceCreateServiceV1Request"
          }
        }
      }
    },
    "serviceServiceShortInfoV1Response": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string",
          "format": "uint64"
        },
        "service_name": {
          "type": "string"
        },
        "when": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "serviceUpdateServiceV1Request": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string",
          "format": "uint64"
        },
        "description": {
          "type": "string"
        },
        "service_name": {
          "type": "string"
        },
        "service_address": {
          "type": "string"
        },
        "when": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}
