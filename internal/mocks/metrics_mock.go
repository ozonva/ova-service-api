// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozonva/ova-service-api/internal/infrastructure/metrics (interfaces: Metrics)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMetrics is a mock of Metrics interface.
type MockMetrics struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsMockRecorder
}

// MockMetricsMockRecorder is the mock recorder for MockMetrics.
type MockMetricsMockRecorder struct {
	mock *MockMetrics
}

// NewMockMetrics creates a new mock instance.
func NewMockMetrics(ctrl *gomock.Controller) *MockMetrics {
	mock := &MockMetrics{ctrl: ctrl}
	mock.recorder = &MockMetricsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetrics) EXPECT() *MockMetricsMockRecorder {
	return m.recorder
}

// IncrementCreateCounter mocks base method.
func (m *MockMetrics) IncrementCreateCounter() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncrementCreateCounter")
}

// IncrementCreateCounter indicates an expected call of IncrementCreateCounter.
func (mr *MockMetricsMockRecorder) IncrementCreateCounter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrementCreateCounter", reflect.TypeOf((*MockMetrics)(nil).IncrementCreateCounter))
}

// IncrementMultiCreateCounter mocks base method.
func (m *MockMetrics) IncrementMultiCreateCounter() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncrementMultiCreateCounter")
}

// IncrementMultiCreateCounter indicates an expected call of IncrementMultiCreateCounter.
func (mr *MockMetricsMockRecorder) IncrementMultiCreateCounter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrementMultiCreateCounter", reflect.TypeOf((*MockMetrics)(nil).IncrementMultiCreateCounter))
}

// IncrementRemoveCounter mocks base method.
func (m *MockMetrics) IncrementRemoveCounter() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncrementRemoveCounter")
}

// IncrementRemoveCounter indicates an expected call of IncrementRemoveCounter.
func (mr *MockMetricsMockRecorder) IncrementRemoveCounter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrementRemoveCounter", reflect.TypeOf((*MockMetrics)(nil).IncrementRemoveCounter))
}

// IncrementUpdateCounter mocks base method.
func (m *MockMetrics) IncrementUpdateCounter() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncrementUpdateCounter")
}

// IncrementUpdateCounter indicates an expected call of IncrementUpdateCounter.
func (mr *MockMetricsMockRecorder) IncrementUpdateCounter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrementUpdateCounter", reflect.TypeOf((*MockMetrics)(nil).IncrementUpdateCounter))
}
